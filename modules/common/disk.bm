# TODO md-raid

fll_disk_abstract() {
	# sets f_d_abstract to the end level of abstraction
	local f_d_disk
	f_d_disk="$1"
	f_d_abstract=""
	[ -b "${f_d_disk}" ] || return
	f_d_abstract="$(grub-probe -d "${f_d_disk}" -t abstraction | tac | grep -m 1 -e lvm -e cryptodisk)"
}

fll_disk_device() {
	# de-dupe the result of fll_d_d
	fll_d_d $@ | sort -u
}

fll_d_d() {
	# walks up and out from block device and reports any unabstracted top level devices
	local f_d_disk
	local f_d_temp
	f_d_disk="$1"
	[ -b "${f_d_disk}" ] || return
	fll_disk_abstract ${f_d_disk}
	if [ -z "${f_d_abstract}" ]; then
		echo $(grub-probe -d "${f_d_disk}" -t disk)
	elif [ "${f_d_abstract}" = "lvm" ]; then
		for f_d_temp in $(lvs --noheadings -o devices ${f_d_disk}); do
			fll_d_d ${f_d_temp%\(*}
		done
	elif [ "${f_d_abstract}" = "cryptodisk" ]; then
		for f_d_temp in $(cryptsetup status "${f_d_disk}" | awk '/^\s+device\:/{$1="";print $0}'); do
			fll_d_d ${f_d_temp}
		done
	fi
}

fll_crypt_device() {
	# de-dupe the result of fll_c_d
	sources=""
	targets=""
	pairs=""
	set -- $(fll_c_d $1)
	while [ -n "$1" ]; do
		# just bail if we don't have a target, wrong args
		[ -n "$2" ] || break
		# do not repeat a source or target
		echo $sources | grep -q "$1" && continue
		echo $targets | grep -q "$2" && continue
		sources="$sources $1"
		targets="$targets $2"
		pairs="$pairs $1 $2"
		shift 2
	done
	echo $pairs
}

fll_c_d() {
	# walks up and out from block device and reports the crypt devices it hits in "source target" pairs
	local f_d_disk
	local f_d_temp
	f_d_disk="$1"
	[ -b "${f_d_disk}" ] || return
	fll_disk_abstract ${f_d_disk}
	if [ -z "${f_d_abstract}" ]; then
		return
	elif [ "${f_d_abstract}" = "lvm" ]; then
		for f_d_temp in $(lvs --noheadings -o devices ${f_d_disk}); do
			fll_c_d ${f_d_temp%\(*}
		done
	elif [ "${f_d_abstract}" = "cryptodisk" ]; then
		for f_d_temp in $(cryptsetup status "${f_d_disk}" | awk '/^\s+device\:/{$1="";print $0}'); do
			echo "${f_d_temp} ${f_d_disk}"
			fll_c_d ${f_d_temp}
		done
	fi
}

fll_disk_usb() {
	# de-dupe fll_d_u
	fll_d_u $1 | sort -u
}

fll_d_u() {
	# walks up and out from block device and reports the usb disks required for it
	local f_d_disk
	for f_d_disk in $(fll_disk_device $1); do
		fll_disk_isusb ${f_d_disk}
	done
}

fll_disk_isusb() {
	readlink -f /sys/block/${1#/dev/}/device | grep -q usb && echo ${1}
}
