#-------------------------
# Global Variables
# ------------------------
CONFIG_FILE="$HOME/.sidconf"
LOG="$HOME/.sidlog"

#
###-------------------------------------
#
logit () {
	local TIME
	say "$@"
	TIME=$(date)
	[ -n "$*" ] && printf "$TIME: $@\n" >> "$LOG" || echo >> "$LOG"
}

#
###-------------------------------------
#
get_efisys () {
	efisys=""
	# This is derived from the install-gui disk code
	disks=`LANG=C fdisk -l | grep "Disk /dev" | cut -d: -f1 | cut -d" " -f2`
	for disk in ${disks}
	do
		# next disk if usb
		[ -n "$(echo $(readlink -f /sys/block/${disk##*/}/device) | grep 'usb')" ] && continue
		get_esp "${disk}"
		efisys="${esp}"
	done
}

#
###-------------------------------------
#
get_esp () {
	disk="${1}"
	# GPT disks appear in fdisk as a single partition of System GPT
	parts=$(fdisk -l $disk | grep -v "Extended" | \
		grep '^/dev/' | cut -d " " -f1 | cut -d "/" -f 3)
	if [ "/dev/${parts}" = "${disk}1" ] && \
		[ -n "$(fdisk -l $disk | awk '/^\/dev\//{if($6 == "GPT"){print "GPT"}}')" ]
	then
		# use gdisk to check for efi system partition
		efis="$(gdisk -l ${disk} | \
			awk '/^ +[[:digit:]]/{if ($6=="EF00"){print "'${disk}'"$1}}')"
		# stop on the first vfat partition found setting esp
		for efi in $efis ; do
			[ "$(blkid -s TYPE -o value ${efi})" = "vfat" ] && \
				esp="${efi}" && break
		done
	fi
}

#
###-------------------------------------
#
get_fat () {
	disk="${1}"
	# GPT disks appear in fdisk as a single partition of System GPT
	parts=$(fdisk -l $disk | grep -v "Extended" | \
		grep '^/dev/' | cut -d " " -f1 | cut -d "/" -f 3)
	if [ "/dev/${parts}" = "${disk}1" ] && \
		[ -n "$(fdisk -l $disk | awk '/^\/dev\//{if($6 == "GPT"){print "GPT"}}')" ]
	then
		# use gdisk to check for partitions
		parts="$(gdisk -l ${disk} | \
			awk '/^ +[[:digit:]]/{print "'${disk}'"$1}')"
		# stop on the first vfat partition
		for part in $parts ; do
			[ "$(blkid -s TYPE -o value ${part})" = "vfat" ] && \
				fat="${part}" && break
		done
	else
		# use fdisk to check for partitions
		parts="$(fdisk -l ${disk} | \
			awk '/^\//{print $1}')"
		# stop on the first vfat partition
		for part in $parts ; do
			[ "$(blkid -s TYPE -o value ${part})" = "vfat" ] && \
				fat="${part}" && break
		done
	fi
}

#
###-------------------------------------
#
get_usbefi () {
	usbdisk="${1}"
	usbefi=""
	get_esp "${usbdisk}"
	if [ -z "${esp}" ]; then
		get_fat "${usbdisk}"
		esp="${fat}"
	fi
	[ -n "${esp}" ] && usbefi="${esp}"
}

#
###-------------------------------------
#
TARGET_MNT_POINT="/fll/hdinstall" 
TARGET_MNT_NAME="hdinstall" 


#
###-------------------------------------
# make use of distro-defaults
###-------------------------------------
#
FLL_DISTRO_NAME="siduction"
FLL_LIVE_USER="siducer"
FLL_MOUNTPOINT="/fll/siduction"

[ -r /etc/default/distro ] && . /etc/default/distro

DEFAULT_USER="$FLL_LIVE_USER"
DEFAULT_DIR="$FLL_MOUNTPOINT"
THEME=$(echo ${FLL_WALLPAPER} | cut -d / -f5)

#
###-------------------------------------
# The default user
###-------------------------------------
#
DEFAULT_NAME=$(getent passwd "$DEFAULT_USER" | cut -f5 -d: | cut -f1 -d,)

# 
###-------------------------------------
# make sure proc is mounted
###-------------------------------------
#
[ -r /proc/cmdline ] || logit "/proc/cmdline not readable (procfs not mounted?)!"
CMDLINE=$(cat /proc/cmdline)

#
###-------------------------------------
# Localisation  ** still needed ?? **
###-------------------------------------
#
export TEXTDOMAINDIR="/usr/share/locale"
export TEXTDOMAIN=fll-installer


#
###-------------------------------------
# log my call
###-------------------------------------
#
logit "Initialisation done"
#
#
###-------------------------------------

